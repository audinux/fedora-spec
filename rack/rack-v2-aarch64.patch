From caa34486e8e93d64f2fbf3b846db5bd79d676798 Mon Sep 17 00:00:00 2001
From: Yann Collette <ycollette.nospam@free.fr>
Date: Thu, 27 Mar 2025 21:54:00 +0100
Subject: [PATCH] aarch64

---
 arch.mk                                 | 2 +-
 compile.mk                              | 3 +++
 dep.mk                                  | 3 +++
 dep/nanovg/src/stb_image.h              | 3 ++-
 dep/pffft/pffft.c                       | 3 ++-
 dep/speexdsp/libspeexdsp/kiss_fft.h     | 3 ++-
 dep/speexdsp/libspeexdsp/resample_sse.h | 6 ++++--
 include/simd/common.hpp                 | 3 ++-
 src/common.cpp                          | 3 +++
 src/engine/Engine.cpp                   | 4 ----
 10 files changed, 22 insertions(+), 11 deletions(-)

diff --git a/arch.mk b/arch.mk
index 66846fb..a6f31bb 100644
--- a/arch.mk
+++ b/arch.mk
@@ -11,7 +11,7 @@ else ifneq (,$(findstring arm64-,$(MACHINE)))
 	ARCH_ARM64 := 1
 	ARCH_CPU := arm64
 else ifneq (,$(findstring aarch64-,$(MACHINE)))
-	ARCH_ARM64 := 1
+	ARCH_AARCH64 := 1
 	ARCH_CPU := arm64
 else
 $(error Could not determine CPU architecture of $(MACHINE))
diff --git a/compile.mk b/compile.mk
index a076c20..9ac0773 100644
--- a/compile.mk
+++ b/compile.mk
@@ -32,6 +32,9 @@ endif
 ifdef ARCH_ARM64
 	FLAGS += -march=armv8-a+fp+simd
 endif
+ifdef ARCH_AARCH64
+	FLAGS += -DARCH_AARCH64
+endif
 
 ifdef ARCH_LIN
 	CXXFLAGS += -Wsuggest-override
diff --git a/dep.mk b/dep.mk
index 292b18a..01f178f 100644
--- a/dep.mk
+++ b/dep.mk
@@ -21,6 +21,9 @@ endif
 ifdef ARCH_ARM64
 	DEP_FLAGS += -march=armv8-a+fp+simd
 endif
+ifdef ARCH_AARCH64
+	DEP_FLAGS += 
+endif
 
 ifdef ARCH_MAC
 	DEP_MAC_SDK_FLAGS := -mmacosx-version-min=10.9
diff --git a/dep/nanovg/src/stb_image.h b/dep/nanovg/src/stb_image.h
index e06f7a1..c36f8ef 100644
--- a/dep/nanovg/src/stb_image.h
+++ b/dep/nanovg/src/stb_image.h
@@ -674,7 +674,8 @@ typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];
 
 #if !defined(STBI_NO_SIMD) && defined(STBI__X86_TARGET)
 #define STBI_SSE2
-#include <emmintrin.h>
+#define SIMDE_ENABLE_NATIVE_ALIASES
+#include <simde/x86/sse2.h>
 
 #ifdef _MSC_VER
 
diff --git a/dep/pffft/pffft.c b/dep/pffft/pffft.c
index 1686e15..c76b964 100644
--- a/dep/pffft/pffft.c
+++ b/dep/pffft/pffft.c
@@ -130,7 +130,8 @@ inline v4sf ld_ps1(const float *p) { v4sf v=vec_lde(0,p); return vec_splat(vec_p
 */
 #elif !defined(PFFFT_SIMD_DISABLE) && (defined(__x86_64__) || defined(_M_X64) || defined(i386) || defined(_M_IX86))
 
-#include <xmmintrin.h>
+#define SIMDE_ENABLE_NATIVE_ALIASES
+#include <simde/x86/sse.h>
 typedef __m128 v4sf;
 #  define SIMD_SZ 4 // 4 floats by simd vector -- this is pretty much hardcoded in the preprocess/finalize functions anyway so you will have to work if you want to enable AVX with its 256-bit vectors.
 #  define VZERO() _mm_setzero_ps()
diff --git a/dep/speexdsp/libspeexdsp/kiss_fft.h b/dep/speexdsp/libspeexdsp/kiss_fft.h
index bb19ead..a73dfa8 100644
--- a/dep/speexdsp/libspeexdsp/kiss_fft.h
+++ b/dep/speexdsp/libspeexdsp/kiss_fft.h
@@ -23,7 +23,8 @@ extern "C" {
 */
 
 #ifdef USE_SIMD
-# include <xmmintrin.h>
+#define SIMDE_ENABLE_NATIVE_ALIASES
+#include <simde/x86/sse.h>
 # define kiss_fft_scalar __m128
 #define KISS_FFT_MALLOC(nbytes) memalign(16,nbytes)
 #else
diff --git a/dep/speexdsp/libspeexdsp/resample_sse.h b/dep/speexdsp/libspeexdsp/resample_sse.h
index 00dc294..f69a06c 100644
--- a/dep/speexdsp/libspeexdsp/resample_sse.h
+++ b/dep/speexdsp/libspeexdsp/resample_sse.h
@@ -34,7 +34,8 @@
    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
-#include <xmmintrin.h>
+#define SIMDE_ENABLE_NATIVE_ALIASES
+#include <simde/x86/sse.h>
 
 #define OVERRIDE_INNER_PRODUCT_SINGLE
 static inline float inner_product_single(const float *a, const float *b, unsigned int len)
@@ -72,7 +73,8 @@ static inline float interpolate_product_single(const float *a, const float *b, u
 }
 
 #ifdef USE_SSE2
-#include <emmintrin.h>
+#define SIMDE_ENABLE_NATIVE_ALIASES
+#include <simde/x86/sse2.h>
 #define OVERRIDE_INNER_PRODUCT_DOUBLE
 
 static inline double inner_product_double(const float *a, const float *b, unsigned int len)
diff --git a/include/simd/common.hpp b/include/simd/common.hpp
index 2a78268..5ffa7b6 100644
--- a/include/simd/common.hpp
+++ b/include/simd/common.hpp
@@ -1,7 +1,8 @@
 #pragma once
 
 #ifdef __SSE4_2__
-	#include <nmmintrin.h>
+	#define SIMDE_ENABLE_NATIVE_ALIASES
+	#include <simde/x86/sse4.2.h>
 #else
 	#define SIMDE_ENABLE_NATIVE_ALIASES
 	#include <simde/x86/sse4.2.h>
diff --git a/src/common.cpp b/src/common.cpp
index aad8aea..220f9d3 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -36,6 +36,9 @@ const std::string APP_VERSION = TOSTRING(_RACK_VERSION);
 #elif defined ARCH_ARM64
 	const std::string APP_CPU = "arm64";
 	const std::string APP_CPU_NAME = "ARM64";
+#elif defined ARCH_AARCH64
+	const std::string APP_CPU = "aarch64";
+	const std::string APP_CPU_NAME = "AARCH64";
 #endif
 const std::string API_URL = "https://api.vcvrack.com";
 
diff --git a/src/engine/Engine.cpp b/src/engine/Engine.cpp
index 9e4b452..65c00b2 100644
--- a/src/engine/Engine.cpp
+++ b/src/engine/Engine.cpp
@@ -22,11 +22,7 @@ namespace engine {
 
 
 inline void cpuPause() {
-#if defined ARCH_X64
 	_mm_pause();
-#elif defined ARCH_ARM64
-	__yield();
-#endif
 }
 
 
-- 
2.48.1

